var articleView = require('views/article')
  , articlesView = require('views/articles')
  , comments = require('services/comments')
  , fs = require('fs')
  , getArticleData = require('./helpers').getArticleData
  , koa = require('koa')
  , parse = require('co-body')
  , route = require('koa-route')
  , serve = require('koa-static')
  , Showdown = require('showdown')
  , userCommentsView = require('views/user-comments')
  ;

var app = module.exports = koa();
var converter = new Showdown.converter();
var README = fs.readFileSync(__dirname + '/../../README.md').toString();

app.use(serve('./public'));

app.use(route.get('/', function *() {
  this.body = converter.makeHtml(README);
}));

app.use(route.get('/articles/:id', function *(id) {
  var response = this.response;
  this.body = yield getArticleData(id)
  .then(function (data) {
    return articleView(data);
  }, function (err) {
    // TODO: this is awkward
    if (err.message === '404') {
      response.status = 404;
      return 'No bacon';
    }
    throw err;
  });
}));

app.use(route.get('/articles', function *() {
  this.body = yield articlesView();
}));

app.use(route.post('/comments', function *() {
  var comment = yield parse.json(this);
  this.body = yield comments.post(comment);
}));

app.use(route.get('/users/:id/comments', function *(id) {
  this.body = yield userCommentsView(id);
}));

if (!module.parent) {
  app.listen(parseInt(process.env.PORT, 10));
  console.log('listening on port ' + process.env.PORT);
}
