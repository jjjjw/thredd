var CommentActions = require('./comment-actions')
  , React = require('react/addons')
  , ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;
  ;

var Comment = exports.Comment = React.createClass({
  render: function () {
    var comment = this.props.comment
      , user = this.props.users[this.props.comment.user]
      ;
    var date = new Date(comment.createdAt);
    var actions = CommentActions({
      parent: comment.id
    });
    return React.DOM.div({className: 'comment', id: 'comment-' + comment.id}
      , React.DOM.div({className: 'comment-header'}
        , React.DOM.a({className: 'user-name', href: '/users/' + user.id }, user.name)
        , React.DOM.a({className: 'comment-link', href: '/articles/' + comment.article + '#comment-' + comment.id}
          , '~'
          )
        , React.DOM.a({className: 'comment-time-link', href: '#comment-' + comment.id}
          , React.DOM.span({className: 'comment-timestamp'}
              , React.DOM.time({dateTime: date.toJSON(), title: date.toString()}, date.toDateString())
            )
          )
        )
      , React.DOM.div({className: 'comment-body'}, comment.body)
      , React.DOM.div({className: 'comment-footer'}
        , React.DOM.div({className: 'comment-actions'}, actions)
        )
      , Thread({
        comments: comment.replies || []
        , depth: this.props.depth + 1
        , users: this.props.users
      })
    );
  }
});

var Thread = exports.Thread = React.createClass({
  render: function () {
    var comments = {}
    , depth = this.props.depth
    , users = this.props.users
    ;
    this.props.comments.forEach(function (comment) {
      comments[comment.id] = Comment({
        comment: comment
        , depth: depth
        , users: users
      });
    });

    return React.DOM.div({ className: 'thread thread-depth-' + this.props.depth },
      ReactCSSTransitionGroup({transitionName: 'comment'}, comments));
  }
});
