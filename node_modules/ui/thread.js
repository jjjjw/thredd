var CommentActions = require('./comment-actions')
  , React = require('react/addons')
  , ReactCSSTransitionGroup = React.addons.CSSTransitionGroup
  ;

exports.Comment = React.createClass({
  render: function () {
    var user = this.props.users[this.props.comment.user];
    var userName = user ? user.name : 'Anonymous';
    var actions = CommentActions({
      parent: this.props.comment.id
    });
    return React.DOM.div({className: 'comment'}
      , React.DOM.span({className: 'user-name'}, userName + ':')
      , React.DOM.span({className: 'comment-body'}, this.props.comment.body)
      , React.DOM.div({className: 'comment-action'}, actions)
      , exports.Thread({
        comments: this.props.comment.thread || []
        , depth: this.props.depth + 1
        , users: this.props.users
      })
    );
  }
});

exports.Thread = React.createClass({
  render: function () {
    var comments = {}
    , depth = this.props.depth
    , users = this.props.users
    ;
    this.props.comments.forEach(function (comment) {
      comments[comment.id] = exports.Comment({
        comment: comment
        , depth: depth
        , users: users
      });
    });

    return React.DOM.div({
      className: 'thread-depth-' + Math.min(this.props.depth, 1)
    }, comments);
  }
});
