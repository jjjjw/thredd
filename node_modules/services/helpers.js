var transforms = require('./transforms')
  , validator = require('./schemas/validator')
  ;

function objectIds (id, coll) {
  return transforms.listify(id).map(function (id) {
    return coll.id(id);
  });
}

function idAndValidate (model, schema, coll) {
  model._id = coll.id();
  model.id = model._id.toString();
  var isValid = validator.validate(model, schema);
  if (!isValid) {
    throw validator.getLastErrors()[0];
    return;
  }
  return model;
}

function stringIds (id) {
  return transforms.listify(id).map(function (id) {
    return id.toString();
  });
}

module.exports = {
  objectIds: objectIds,

  findById: function (id, coll) {
    return coll.find({ _id: { $in: objectIds(id, coll) } });
  },

  stringIds: stringIds,

  validateAndSave: function (modelList, schema, coll) {
    modelList = transforms.listify(modelList);
    try {
      modelList = modelList.map(function (model) {
        return idAndValidate(model, schema, coll);
      });
    } catch(e) {
      return new Promise(function (resolve, reject) {
        reject(e);
      });
    }
    return coll.insert(modelList);
  }
};
