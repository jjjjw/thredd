var listify = require('transforms').listify
  , validator = require('schemas/validator')
  ;

function validate (model, schema, coll) {
  var isValid = validator.validate(model, schema);
  if (!isValid) {
    throw validator.getLastErrors()[0];
    return;
  }
  return model;
}

function findById (ids, coll) {
  return coll.find({ _id: { $in: objectIds(ids, coll) } }).then(function (results) {
    return recordsToObjs(results);
  });
}

function findByField (field, ids, coll) {
  var query = {};
  query[field] = { $in: listify(ids) };
  return coll.find(query).then(function (results) {
    return recordsToObjs(results);
  });
}

function getAll (coll) {
  return coll.find({}).then(function (results) {
    return recordsToObjs(results);
  });
}

// caution, this will mutate the array of records!
function recordsToObjs (list) {
  return listify(list).map(function (record) {
    record.id = record._id.toString();
    delete record._id;
    return record;
  });
}

function objectIds (id, coll) {
  return listify(id).map(function (id) {
    return coll.id(id);
  });
}

function validateAndSave (modelList, schema, coll) {
  modelList = listify(modelList).map(function (model) {
    // will throw when a validation fails
    return validate(model, schema, coll);
  });
  return coll.insert(modelList).then(function (success) {
    return recordsToObjs(success);
  });
}

module.exports = {
  findById: findById
  , findByField: findByField
  , getAll: getAll
  , validateAndSave: validateAndSave
};
