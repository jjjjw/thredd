exports.cloneShallow = function (obj) {
  var clone = {};
  Object.keys(obj).forEach(function (k) {
    clone[k] = obj[k];
  });
  return clone;
};

exports.listify = function (thing) {
  if (!Array.isArray(thing)) {
    return [thing];
  }
  return thing;
};

exports.keyById = function (list) {
  var dict = {};
  list.forEach(function (model) {
    dict[model.id] = model;
  });
  return dict;
};

exports.recordsToObj = function (list) {
  return exports.listify(list).map(function (record) {
    var obj = exports.cloneShallow(record);
    delete obj._id;
    return obj;
  });
};

exports.threadify = function (commentList) {
  var topLevel = []
    , parentMap = {}
    ;

  if (!commentList || !commentList.length) return topLevel;

  commentList = commentList.map(exports.cloneShallow);
  commentList.sort(function(a, b) {
    return a.createdAt - b.createdAt;
  });

  commentList.forEach(function (comment) {
    parentMap[comment.id] = comment;
    var parent = parentMap[comment.parent];
    if (!parent) {
      topLevel.unshift(comment);
      return;
    }
    parent.thread = parent.thread || [];
    parent.thread.unshift(comment);
  });

  return topLevel;
};
