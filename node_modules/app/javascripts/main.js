var Commentor = require('ui/commentor')
  , React = require('react')
  , Thread = require('ui/thread').Thread
  ;

function sendXHR (method, url, data) {
  return new Promise(function (resolve, reject) {
    var xhr = new XMLHttpRequest;
    xhr.addEventListener('error', reject);
    xhr.addEventListener('load', function () {
      if (xhr.readyState == 4) {
        if (xhr.status == 200) {
            return resolve(xhr.response);
        }
        reject(new Error(xhr.statusText));
      }
    });
    xhr.open(method, url);
    xhr.responseType = 'json';
    if (data) {
      data = JSON.stringify(data);
    }
    xhr.send(data);
  });
}

function DOMLoaded () {
  var initData = JSON.parse(document.getElementById('init-data').getAttribute('data-json'));
  var article = initData.article
    , thread = initData.thread
    , users = initData.users
    ;
  var commentsEl= document.getElementById('js-comments-container')
    , commentorComponent = Commentor()
    , commentorEl = document.getElementById('js-commentor-container')
    , threadEl = document.getElementById('js-thread-container')
    , threadComponent = Thread({
      depth: 0
      , comments: thread
      , users: users
    })
    ;

  React.renderComponent(commentorComponent, commentorEl);
  React.renderComponent(threadComponent, threadEl);

  commentsEl.addEventListener('commentEntered', function (ev) {
    var body = ev.detail.body;
    var comment = {
      article: article
      , body: body
      , user: '540fc334d7067e0000982150' // TODO
    };
    // optimistic render
    thread.unshift(comment);
    // TODO: props are not mutated
    React.renderComponent(threadComponent, threadEl);
    sendXHR('POST', '/comments/', comment)
    .then(function (resp) {
      // render with full data
      thread.shift();
      thread.unshift(resp);
      React.renderComponent(threadComponent, threadEl);
    }, function (err) {
      // or unrender because fail
      thread.shift();
      React.renderComponent(threadComponent, threadEl);
    });
  });
}

module.exports = (function () {
  window.addEventListener('DOMContentLoaded', function () {
    window.removeEventListener('DOMContentLoaded');
    DOMLoaded();
  });
})();
